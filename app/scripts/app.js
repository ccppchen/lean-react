/** @js React.DOM */
'use strict';
// React.initializeTouchEvents(true);

var HelloWorld = React.createClass({displayName: "HelloWorld",
	getInitialState: function() {
		return {message: 'Hello World!!1111'};
	},
	goodbye: function(event) {
		this.setState({message: 'Goodbye World.'});
	},
	render: function() {
		return (
			React.createElement("h1", {onClick: this.goodbye}, this.state.message)
		);
	}
});

var otherComponent = React.createClass({displayName: "otherComponent",

	render: function() { 
		return (
			React.createElement("span", null, "hello")
		);
	}

});

// 来回切换值
var LikeToggle = React.createClass({displayName: "LikeToggle",
	getInitialState: function() {
		return {
			coument: true 
		};
	},
	handlerClick: function(e){
		this.setState({
			coument: !this.state.coument 
		});
	},
    render: function() {
    	var text = this.state.coument ? 'like1' : 'dislike';
        return (
            React.createElement("div", {onClick: this.handlerClick}, 
            	"You ", text, " to toggle."
            )
        );
    }
});

// ajax 获取数据然后渲染
var UserList = React.createClass({displayName: "UserList",
	getInitialState: function() {
		return {
			username: 'chenpeng',
			lastGistUrl: null,
			loading: true
		};
	},
	componentDidMount: function() {
		this.setState({
			loading: false
		})
	},
	handleClick: function (e){
		$.get(this.props.url, function(data) {
			console.log(data);
			var lastGist = data[0];
			if (this.isMounted()) {
				this.setState({
					username: lastGist.owner.id, 
					lastGistUrl: lastGist.html_url
				});
			}
		}.bind(this));
	},
    render: function() {
    	if (this.state.loading) {
    		return React.createElement("div", null, "Loading")
    	}else{
    		return (
    		    React.createElement("div", {onClick: this.handleClick}, 
    		    	this.state.username, 
    		    	this.state.lastGistUrl
    		    )
    		)
    	}
    }
});

React.render(
	React.createElement("div", null, 
		React.createElement(HelloWorld, null), 
		React.createElement(LikeToggle, null), 
		React.createElement(UserList, {url: "https://api.github.com/users/octocat/gists"})
	),
	document.getElementById('app')
);


//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmb3JtZWQuanMiLCJzb3VyY2VzIjpbbnVsbF0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUNwQixZQUFZLENBQUM7QUFDYixxQ0FBcUM7O0FBRXJDLElBQUksZ0NBQWdDLDBCQUFBO0NBQ25DLGVBQWUsRUFBRSxXQUFXO0VBQzNCLE9BQU8sQ0FBQyxPQUFPLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztFQUN0QztDQUNELE9BQU8sRUFBRSxTQUFTLEtBQUssRUFBRTtFQUN4QixJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLENBQUMsQ0FBQztFQUMzQztDQUNELE1BQU0sRUFBRSxXQUFXO0VBQ2xCO0dBQ0Msb0JBQUEsSUFBRyxFQUFBLENBQUEsQ0FBQyxPQUFBLEVBQU8sQ0FBRSxJQUFJLENBQUMsT0FBUyxDQUFBLEVBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFhLENBQUE7SUFDbkQ7RUFDRjtBQUNGLENBQUMsQ0FBQyxDQUFDOztBQUVILElBQUksb0NBQW9DLDhCQUFBOztDQUV2QyxNQUFNLEVBQUUsV0FBVztFQUNsQjtHQUNDLG9CQUFBLE1BQUssRUFBQSxJQUFDLEVBQUEsT0FBWSxDQUFBO0lBQ2pCO0FBQ0osRUFBRTs7QUFFRixDQUFDLENBQUMsQ0FBQzs7QUFFSCxRQUFRO0FBQ1IsSUFBSSxnQ0FBZ0MsMEJBQUE7Q0FDbkMsZUFBZSxFQUFFLFdBQVc7RUFDM0IsT0FBTztHQUNOLE9BQU8sRUFBRSxJQUFJO0dBQ2IsQ0FBQztFQUNGO0NBQ0QsWUFBWSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0VBQ3hCLElBQUksQ0FBQyxRQUFRLENBQUM7R0FDYixPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU87R0FDNUIsQ0FBQyxDQUFDO0VBQ0g7SUFDRSxNQUFNLEVBQUUsV0FBVztLQUNsQixJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sR0FBRyxPQUFPLEdBQUcsU0FBUyxDQUFDO1FBQ2pEO1lBQ0ksb0JBQUEsS0FBSSxFQUFBLENBQUEsQ0FBQyxPQUFBLEVBQU8sQ0FBRSxJQUFJLENBQUMsWUFBYyxDQUFBLEVBQUE7QUFBQSxhQUFBLE1BQUEsRUFDM0IsSUFBSSxFQUFDLGFBQUE7QUFBQSxZQUNMLENBQUE7VUFDUjtLQUNMO0FBQ0wsQ0FBQyxDQUFDLENBQUM7O0FBRUgsZ0JBQWdCO0FBQ2hCLElBQUksOEJBQThCLHdCQUFBO0NBQ2pDLGVBQWUsRUFBRSxXQUFXO0VBQzNCLE9BQU87R0FDTixRQUFRLEVBQUUsVUFBVTtHQUNwQixXQUFXLEVBQUUsSUFBSTtHQUNqQixPQUFPLEVBQUUsSUFBSTtHQUNiLENBQUM7RUFDRjtDQUNELGlCQUFpQixFQUFFLFdBQVc7RUFDN0IsSUFBSSxDQUFDLFFBQVEsQ0FBQztHQUNiLE9BQU8sRUFBRSxLQUFLO0dBQ2QsQ0FBQztFQUNGO0NBQ0QsV0FBVyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0VBQ3hCLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsU0FBUyxJQUFJLEVBQUU7R0FDcEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUNsQixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7R0FDdkIsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFLEVBQUU7SUFDckIsSUFBSSxDQUFDLFFBQVEsQ0FBQztLQUNiLFFBQVEsRUFBRSxRQUFRLENBQUMsS0FBSyxDQUFDLEVBQUU7S0FDM0IsV0FBVyxFQUFFLFFBQVEsQ0FBQyxRQUFRO0tBQzlCLENBQUMsQ0FBQztJQUNIO0dBQ0QsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztFQUNkO0lBQ0UsTUFBTSxFQUFFLFdBQVc7S0FDbEIsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRTtNQUN2QixPQUFPLG9CQUFBLEtBQUksRUFBQSxJQUFDLEVBQUEsU0FBYSxDQUFBO01BQ3pCLElBQUk7TUFDSjtVQUNJLG9CQUFBLEtBQUksRUFBQSxDQUFBLENBQUMsT0FBQSxFQUFPLENBQUUsSUFBSSxDQUFDLFdBQWEsQ0FBQSxFQUFBO1dBQzlCLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFDO1dBQ3BCLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBWTtVQUNuQixDQUFBO09BQ1Q7TUFDRDtLQUNEO0FBQ0wsQ0FBQyxDQUFDLENBQUM7O0FBRUgsS0FBSyxDQUFDLE1BQU07Q0FDWCxvQkFBQSxLQUFJLEVBQUEsSUFBQyxFQUFBO0VBQ0osb0JBQUMsVUFBVSxFQUFBLElBQUEsQ0FBRyxDQUFBLEVBQUE7RUFDZCxvQkFBQyxVQUFVLEVBQUEsSUFBQSxDQUFHLENBQUEsRUFBQTtFQUNkLG9CQUFDLFFBQVEsRUFBQSxDQUFBLENBQUMsR0FBQSxFQUFHLENBQUMsNENBQTRDLENBQUEsQ0FBRyxDQUFBO0NBQ3hELENBQUE7Q0FDTixRQUFRLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQztBQUMvQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGpzIFJlYWN0LkRPTSAqL1xuJ3VzZSBzdHJpY3QnO1xuLy8gUmVhY3QuaW5pdGlhbGl6ZVRvdWNoRXZlbnRzKHRydWUpO1xuXG52YXIgSGVsbG9Xb3JsZCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcblx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4ge21lc3NhZ2U6ICdIZWxsbyBXb3JsZCEhMTExMSd9O1xuXHR9LFxuXHRnb29kYnllOiBmdW5jdGlvbihldmVudCkge1xuXHRcdHRoaXMuc2V0U3RhdGUoe21lc3NhZ2U6ICdHb29kYnllIFdvcmxkLid9KTtcblx0fSxcblx0cmVuZGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gKFxuXHRcdFx0PGgxIG9uQ2xpY2s9e3RoaXMuZ29vZGJ5ZX0+e3RoaXMuc3RhdGUubWVzc2FnZX08L2gxPlxuXHRcdCk7XG5cdH1cbn0pO1xuXG52YXIgb3RoZXJDb21wb25lbnQgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cblx0cmVuZGVyOiBmdW5jdGlvbigpIHsgXG5cdFx0cmV0dXJuIChcblx0XHRcdDxzcGFuPmhlbGxvPC9zcGFuPlxuXHRcdCk7XG5cdH1cblxufSk7XG5cbi8vIOadpeWbnuWIh+aNouWAvFxudmFyIExpa2VUb2dnbGUgPSBSZWFjdC5jcmVhdGVDbGFzcyh7XG5cdGdldEluaXRpYWxTdGF0ZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdGNvdW1lbnQ6IHRydWUgXG5cdFx0fTtcblx0fSxcblx0aGFuZGxlckNsaWNrOiBmdW5jdGlvbihlKXtcblx0XHR0aGlzLnNldFN0YXRlKHtcblx0XHRcdGNvdW1lbnQ6ICF0aGlzLnN0YXRlLmNvdW1lbnQgXG5cdFx0fSk7XG5cdH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICBcdHZhciB0ZXh0ID0gdGhpcy5zdGF0ZS5jb3VtZW50ID8gJ2xpa2UxJyA6ICdkaXNsaWtlJztcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgb25DbGljaz17dGhpcy5oYW5kbGVyQ2xpY2t9PlxuICAgICAgICAgICAgXHRZb3Uge3RleHR9IHRvIHRvZ2dsZS5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn0pO1xuXG4vLyBhamF4wqDojrflj5bmlbDmja7nhLblkI7muLLmn5NcbnZhciBVc2VyTGlzdCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcblx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0dXNlcm5hbWU6ICdjaGVucGVuZycsXG5cdFx0XHRsYXN0R2lzdFVybDogbnVsbCxcblx0XHRcdGxvYWRpbmc6IHRydWVcblx0XHR9O1xuXHR9LFxuXHRjb21wb25lbnREaWRNb3VudDogZnVuY3Rpb24oKSB7XG5cdFx0dGhpcy5zZXRTdGF0ZSh7XG5cdFx0XHRsb2FkaW5nOiBmYWxzZVxuXHRcdH0pXG5cdH0sXG5cdGhhbmRsZUNsaWNrOiBmdW5jdGlvbiAoZSl7XG5cdFx0JC5nZXQodGhpcy5wcm9wcy51cmwsIGZ1bmN0aW9uKGRhdGEpIHtcblx0XHRcdGNvbnNvbGUubG9nKGRhdGEpO1xuXHRcdFx0dmFyIGxhc3RHaXN0ID0gZGF0YVswXTtcblx0XHRcdGlmICh0aGlzLmlzTW91bnRlZCgpKSB7XG5cdFx0XHRcdHRoaXMuc2V0U3RhdGUoe1xuXHRcdFx0XHRcdHVzZXJuYW1lOiBsYXN0R2lzdC5vd25lci5pZCwgXG5cdFx0XHRcdFx0bGFzdEdpc3RVcmw6IGxhc3RHaXN0Lmh0bWxfdXJsXG5cdFx0XHRcdH0pO1xuXHRcdFx0fVxuXHRcdH0uYmluZCh0aGlzKSk7XG5cdH0sXG4gICAgcmVuZGVyOiBmdW5jdGlvbigpIHtcbiAgICBcdGlmICh0aGlzLnN0YXRlLmxvYWRpbmcpIHtcbiAgICBcdFx0cmV0dXJuIDxkaXY+TG9hZGluZzwvZGl2PlxuICAgIFx0fWVsc2V7XG4gICAgXHRcdHJldHVybiAoXG4gICAgXHRcdCAgICA8ZGl2IG9uQ2xpY2s9e3RoaXMuaGFuZGxlQ2xpY2t9PlxuICAgIFx0XHQgICAgXHR7dGhpcy5zdGF0ZS51c2VybmFtZX0gXG4gICAgXHRcdCAgICBcdHt0aGlzLnN0YXRlLmxhc3RHaXN0VXJsfVxuICAgIFx0XHQgICAgPC9kaXY+XG4gICAgXHRcdClcbiAgICBcdH1cbiAgICB9XG59KTtcblxuUmVhY3QucmVuZGVyKFxuXHQ8ZGl2PlxuXHRcdDxIZWxsb1dvcmxkIC8+XG5cdFx0PExpa2VUb2dnbGUgLz5cblx0XHQ8VXNlckxpc3QgdXJsPVwiaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS91c2Vycy9vY3RvY2F0L2dpc3RzXCIgLz5cblx0PC9kaXY+LFxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJylcbik7XG5cbiJdfQ==